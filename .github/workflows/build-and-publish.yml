name: Build and Publish

on:
  push:
    branches:
      - main
      - release/*
  pull_request:

jobs:
  build:

    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          submodules: recursive
      env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
      
    - name: Check if submodule has been pulled
      run: |
           cd opamp-spec/
           ls

    - name: Build Jar with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: jar
    
    - name: Publish Jar with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: publish
    
    - name: Extract the jar to see the contents
      run: |
           ls /tmp/opamp-java/io/opentelemetry/opamp-java/1.0.0/opamp-java-1.0.0.jar
           unzip /tmp/opamp-java/io/opentelemetry/opamp-java/1.0.0/opamp-java-1.0.0.jar

  publish-snapshots:
    name: publish-snapshots${{ (github.ref_name != 'main' || github.repository != 'open-telemetry/opamp-java') && ' (skipped)' || '' }}
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: setup-java
        name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - uses: gradle/gradle-build-action@v2
        # skipping release branches because the versions in those branches are not snapshots
        # (also this skips pull requests)
        # if: ${{ github.ref_name == 'main' && github.repository == 'open-telemetry/opamp-java' }}
        with:
          arguments: assemble publishToSonatype
        env:
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_KEY: ${{ secrets.SONATYPE_KEY }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}